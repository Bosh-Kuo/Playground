type User {
  id: ID!
  name: String!
  password: String!
  scores: [String!]
}

type Query {
  users(game: String!): [User!]!
}

type Mutation {
  createUser(data: CreateUserInput!): UserResponse!
  loginUser(data: CreateUserInput!): UserResponse!
  updateUser(data: UpdateUserInput!): UserResponse!
}

type Subscription {
  userUpdated(game: String!): UserSubscriptionPayload!
}

input CreateUserInput {
  name: String!
  password: String!
}

input UpdateUserInput {
  name: String!
  game: String!
  score: String!
}

type UserResponse {
  ok: Boolean!
  user: User
  error: String
}

enum MutationType {
  UPDATED
}

type UserSubscriptionPayload {
  mutation: MutationType!
  data: [User]
}
